version: "3"
services:
  app:
    image: 'jc21/nginx-proxy-manager:latest'
    networks:
        - ngnix
    restart: unless-stopped
    ports:
      # Public HTTP Port:
      - '80:80'
      # Public HTTPS Port:
      - '443:443'
      # Admin Web Port:
      - '81:81'
      # Add any other Stream port you want to expose
      # - '21:21' # FTP (need to be open to use streams)
    env_file: ./env/.env.ngnix
    volumes:
      - ./docker-volumes/data:/data
      - ./docker-volumes/letsencrypt:/etc/letsencrypt
      # sync host date with container date 
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - ngnix-db
      - easy-dog-backend
      - mongo
  
  ngnix-db:
    image: 'jc21/mariadb-aria:latest'
    networks:
        - ngnix
    restart: unless-stopped
    env_file: ./env/.env.mysql
    volumes:
      - ./docker-volumes/data/mysql:/var/lib/mysql
      # Sync host date with container date
      - /etc/localtime:/etc/localtime:ro
  
  easy-dog-backend:
    image: 'easy-dog-backend:local'
    # Enable colors for strapi's LOGs
    tty: true
    networks:
        - ngnix
    restart: unless-stopped
    ports:
      # API port
      - '5000'
    env_file: ../easy-dog-backend/app/env/.env.production
    volumes:
      - ../easy-dog-backend/app:/srv/app
      # Prevent local node_modules to be copied.
      - /srv/app/node_modules
      # Sync host date with container date  
      - /etc/localtime:/etc/localtime:ro
    build:
      context: ../easy-dog-backend/app/
      dockerfile: Dockerfile
    depends_on:
      - mongo
  
  mongo:
    image: mongo
    env_file:
      - ../easy-dog-backend/app/env/.env.production
    volumes:
      - ../easy-dog-backend/data-production:/data/db
      # Sync time server/container
      - /etc/localtime:/etc/localtime:ro
    networks:
      - ngnix

networks: 
    ngnix:
